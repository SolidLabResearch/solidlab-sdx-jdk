"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

directive @identifier on FIELD_DEFINITION

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @is(class: String) on OBJECT

directive @property(iri: String) on FIELD_DEFINITION

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Address @is(class : "http://schema.org/PostalAddress") {
  city: String! @property(iri : "<http://schema.org/addressLocality>")
  country: String! @property(iri : "<http://schema.org/addressCountry>")
  "Auto-generated property that will be assigned to the `iri` of the Thing that is being queried."
  id: ID! @identifier
  postalCode: String! @property(iri : "<http://schema.org/postalCode>")
  streetLine: String! @property(iri : "<http://schema.org/streetAddress>")
}

type Contact @is(class : "http://schema.org/Person") {
  address: Address @property(iri : "<http://schema.org/address>")
  email: [String]! @property(iri : "<http://schema.org/email>")
  familyName: String! @property(iri : "<http://schema.org/familyName>")
  givenName: String! @property(iri : "<http://schema.org/givenName>")
  "Auto-generated property that will be assigned to the `iri` of the Thing that is being queried."
  id: ID! @identifier
  worksFor: [Organization]! @property(iri : "<http://schema.org/worksFor>")
}

type Organization @is(class : "http://schema.org/Organization") {
  address: Address @property(iri : "<http://schema.org/address>")
  "Auto-generated property that will be assigned to the `iri` of the Thing that is being queried."
  id: ID! @identifier
  name: String! @property(iri : "<http://schema.org/name>")
}

type Query {
  address(id: String): Address
  addresss: [Address]
  contact(id: String): Contact
  contacts: [Contact]
  organization(id: String): Organization
  organizations: [Organization]
}
